# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2020, Juan Linietsky, Ariel Manzur and the Godot community (CC-BY 3.0)
# This file is distributed under the same license as the Godot Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Godot Engine latest\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-07-06 14:52+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:4
msgid "GDScript basics"
msgstr "Основы GDScript"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:7
msgid "Introduction"
msgstr "Введение"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:9
msgid ""
"*GDScript* is a high-level, dynamically typed programming language used to "
"create content. It uses a syntax similar to `Python <https://en.wikipedia."
"org/wiki/Python_%28programming_language%29>`_ (blocks are indent-based and "
"many keywords are similar). Its goal is to be optimized for and tightly "
"integrated with Godot Engine, allowing great flexibility for content "
"creation and integration."
msgstr ""
"*GDScript* это высокоуровневый, динамически типизированный язык "
"программирования. Он использует синтаксис похожий на `Python <https://en."
"wikipedia.org/wiki/Python_%28programming_language%29>`_ (блоки выделяются "
"табуляцией и множество ключевых слов идентичны). Его цель быть "
"оптимизированным и плотно интегрированным в движок Godot, позволяя достичь "
"высокой гибкости в создании контента и интеграции."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:17
msgid "History"
msgstr "История"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:21
#, fuzzy
msgid ""
"Documentation about GDScript's history has been moved to the :ref:"
"`Frequently Asked Questions <doc_faq_what_is_gdscript>`."
msgstr "Документация об экспорте перемещена в :ref:`doc_gdscript_exports`."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:25
msgid "Example of GDScript"
msgstr "Пример GDScript"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:27
msgid ""
"Some people can learn better by taking a look at the syntax, so here's a "
"simple example of how GDScript looks."
msgstr ""
"Некоторые люди могут научиться лучше, взглянув на синтаксис, поэтому вот "
"простой пример того, как выглядит GDScript."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:110
msgid ""
"If you have previous experience with statically typed languages such as C, C+"
"+, or C# but never used a dynamically typed one before, it is advised you "
"read this tutorial: :ref:`doc_gdscript_more_efficiently`."
msgstr ""
"Если у вас уже был опыт работы со статически типизированными языками, такими "
"как C, C++ или C#, но вы никогда раньше не использовали динамически "
"типизированный язык, рекомендуется прочитать это руководство: :ref:"
"`doc_gdscript_efficient`."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:115
msgid "Language"
msgstr "Язык"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:117
msgid ""
"In the following, an overview is given to GDScript. Details, such as which "
"methods are available to arrays or other objects, should be looked up in the "
"linked class descriptions."
msgstr ""
"Далее следует общий обзор GDScript. Подробную информацию, например, о "
"доступных методах для массивов или других объектов, следует искать в "
"описаниях связанных классов."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:122
msgid "Identifiers"
msgstr "Идентификаторы"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:124
msgid ""
"Any string that restricts itself to alphabetic characters (``a`` to ``z`` "
"and ``A`` to ``Z``), digits (``0`` to ``9``) and ``_`` qualifies as an "
"identifier. Additionally, identifiers must not begin with a digit. "
"Identifiers are case-sensitive (``foo`` is different from ``FOO``)."
msgstr ""
"Любая строка, которая ограничивает себя алфавитными символами (от ``a`` до "
"``z`` и от ``A`` до ``Z``), цифрами (от ``0`` до ``9``) и ``_`` "
"квалифицируется как идентификатор. Кроме того, идентификаторы не должны "
"начинаться с цифры. Идентификаторы чувствительны к регистру (``foo`` "
"отличается от ``FOO``)."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:130
msgid "Keywords"
msgstr "Ключевые слова"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:132
msgid ""
"The following is the list of keywords supported by the language. Since "
"keywords are reserved words (tokens), they can't be used as identifiers. "
"Operators (like ``in``, ``not``, ``and`` or ``or``) and names of built-in "
"types as listed in the following sections are also reserved."
msgstr ""
"Ниже приведен список ключевых слов, поддерживаемых языком. Поскольку "
"ключевые слова являются зарезервированными словами (токенами), они не могут "
"использоваться в качестве идентификаторов. Операторы (например, ``in``, "
"``not``, ``and`` или ``or``) и имена встроенных типов, перечисленные в "
"следующих разделах, также зарезервированы."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:137
msgid ""
"Keywords are defined in the `GDScript tokenizer <https://github.com/"
"godotengine/godot/blob/master/modules/gdscript/gdscript_tokenizer.cpp>`_ in "
"case you want to take a look under the hood."
msgstr ""
"Ключевые слова определены в `токенизаторе GDScript <https://github.com/"
"godotengine/godot/blob/master/modules/gdscript/gdscript_tokenizer.cpp>`_, "
"если вы хотите взглянуть под капот."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:141
msgid "Keyword"
msgstr "Ключевое слово"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:141
msgid "Description"
msgstr "Описание"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:143
msgid "if"
msgstr "if"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:143
#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:145
#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:147
msgid "See `if/else/elif`_."
msgstr "Смотрите `if/else/elif`_."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:145
msgid "elif"
msgstr "elif"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:147
msgid "else"
msgstr "else"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:149
#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:807
msgid "for"
msgstr "for"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:149
msgid "See for_."
msgstr "См. for_."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:151
#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:796
msgid "while"
msgstr "while"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:151
msgid "See while_."
msgstr "Смотрите while_."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:153
#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:842
msgid "match"
msgstr "match"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:153
msgid "See match_."
msgstr "Смотрите match_."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:155
msgid "break"
msgstr "break"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:155
msgid "Exits the execution of the current ``for`` or ``while`` loop."
msgstr "Выход из выполнения текущего ``for`` или ``while`` циклов."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:157
msgid "continue"
msgstr "continue"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:157
msgid ""
"Immediately skips to the next iteration of the ``for`` or ``while`` loop."
msgstr "Немедленный переход к следующей итерации ``for`` или ``while`` циклов."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:159
msgid "pass"
msgstr "pass"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:159
msgid ""
"Used where a statement is required syntactically but execution of code is "
"undesired, e.g. in empty functions."
msgstr ""
"Используется там, где наличие инструкции требуется синтаксически, но "
"выполнение ее кода нежелательно. Например, в пустых функциях."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:161
msgid "return"
msgstr "return"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:161
msgid "Returns a value from a function."
msgstr "Возвращает значение из функции."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:163
msgid "class"
msgstr "class"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:163
msgid "Defines a class."
msgstr "Объявляет класс."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:165
msgid "extends"
msgstr "extends"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:165
msgid "Defines what class to extend with the current class."
msgstr "Объявляет какой класс расширяет текущий класс."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:167
msgid "is"
msgstr "is"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:167
#, fuzzy
msgid ""
"Tests whether a variable extends a given class, or is of a given built-in "
"type."
msgstr "Проверяет что значение расширяет указанный класс."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:169
msgid "as"
msgstr "as"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:169
#, fuzzy
msgid "Cast the value to a given type if possible."
msgstr "Приводит значение к данному типу, если это возможно."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:171
msgid "self"
msgstr "self"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:171
msgid "Refers to current class instance."
msgstr "Ссылается на текущий экземпляр класса."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:173
msgid "tool"
msgstr "tool"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:173
msgid "Executes the script in the editor."
msgstr "Выполняет скрипт в редакторе."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:175
msgid "signal"
msgstr "signal"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:175
msgid "Defines a signal."
msgstr "Объявляет сигнал."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:177
msgid "func"
msgstr "func"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:177
msgid "Defines a function."
msgstr "Объявляет функцию."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:179
msgid "static"
msgstr "static"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:179
msgid "Defines a static function. Static member variables are not allowed."
msgstr "Объявление статической функции. Статические поля класса не доступны."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:181
msgid "const"
msgstr "const"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:181
msgid "Defines a constant."
msgstr "Объявляет константу."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:183
msgid "enum"
msgstr "enum"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:183
msgid "Defines an enum."
msgstr "Объявляет перечисление."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:185
msgid "var"
msgstr "var"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:185
msgid "Defines a variable."
msgstr "Объявляет переменную."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:187
msgid "onready"
msgstr "onready"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:187
msgid ""
"Initializes a variable once the Node the script is attached to and its "
"children are part of the scene tree."
msgstr ""
"Инициализирует переменную, как только Узел, к которому прикреплен скрипт, а "
"также его дети являются частью дерева сцен."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:189
msgid "export"
msgstr "export"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:189
msgid ""
"Saves a variable along with the resource it's attached to and makes it "
"visible and modifiable in the editor."
msgstr ""
"Сохраняет переменную вместе с ресурсом, к которому она привязана, и делает "
"ее видимой и модифицируемой в редакторе."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:191
msgid "setget"
msgstr "setget"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:191
msgid "Defines setter and getter functions for a variable."
msgstr "Определяет функции setter и getter для переменной."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:193
msgid "breakpoint"
msgstr "breakpoint"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:193
msgid "Editor helper for debugger breakpoints."
msgstr "Помощник редактора для контрольных точек отладчика."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:195
msgid "preload"
msgstr "preload"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:195
msgid "Preloads a class or variable. See `Classes as resources`_."
msgstr ""
"Предварительно загружает класс или переменную. См. `Классы как ресурсы`_."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:197
msgid "yield"
msgstr "yield"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:197
msgid "Coroutine support. See `Coroutines with yield`_."
msgstr "Поддержка сопрограмм. См. `Сопрограммы с промежуточным возвратом`_."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:199
msgid "assert"
msgstr "assert"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:199
msgid ""
"Asserts a condition, logs error on failure. Ignored in non-debug builds. See "
"`Assert keyword`_."
msgstr ""
"Задает условие, регистрирует ошибку при сбое. Игнорируется в не отладочных "
"сборках. См. `Ключевое слово Assert`_."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:201
msgid "remote"
msgstr "remote"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:201
#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:203
#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:205
#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:207
#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:209
#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:211
msgid ""
"Networking RPC annotation. See :ref:`high-level multiplayer docs "
"<doc_high_level_multiplayer>`."
msgstr ""
"Сетевая аннотация RPC. См. :ref:`документацию по многопользовательскому "
"режиму высокого уровня <doc_high_level_multiplayer>`."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:203
msgid "master"
msgstr "master"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:205
msgid "puppet"
msgstr "puppet"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:207
msgid "remotesync"
msgstr "remotesync"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:209
msgid "mastersync"
msgstr "mastersync"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:211
msgid "puppetsync"
msgstr "puppetsync"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:213
msgid "PI"
msgstr "PI"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:213
msgid "PI constant."
msgstr "Константа Пи."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:215
msgid "TAU"
msgstr "TAU"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:215
msgid "TAU constant."
msgstr "Константа Тау."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:217
msgid "INF"
msgstr "INF"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:217
msgid "Infinity constant. Used for comparisons."
msgstr "Бесконечность. Используется для сравнений."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:219
msgid "NAN"
msgstr "NAN"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:219
msgid "NAN (not a number) constant. Used for comparisons."
msgstr "NAN (англ. Not-a-Number, \"не число\"). Используется для сравнений."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:223
msgid "Operators"
msgstr "Операторы"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:225
msgid "The following is the list of supported operators and their precedence."
msgstr "Далее приведен список поддерживаемых операторов и их приоритет."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:228
msgid "**Operator**"
msgstr "**Оператор**"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:228
msgid "**Description**"
msgstr "**Описание**"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:230
msgid "``x[index]``"
msgstr "``x[index]``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:230
#, fuzzy
msgid "Subscription (highest priority)"
msgstr "Подпись, Высокий Приоритет"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:232
msgid "``x.attribute``"
msgstr "``x.attribute``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:232
#, fuzzy
msgid "Attribute reference"
msgstr "Ссылка на атрибут"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:234
msgid "``foo()``"
msgstr "``foo()``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:234
#, fuzzy
msgid "Function call"
msgstr "Функции"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:236
msgid "``is``"
msgstr "``is``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:236
#, fuzzy
msgid "Instance type checker"
msgstr "Проверка типа экземпляра"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:238
msgid "``~``"
msgstr "``~``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:238
msgid "Bitwise NOT"
msgstr "Побитовое НЕ"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:240
msgid "``-x``"
msgstr "``-x``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:240
#, fuzzy
msgid "Negative / Unary negation"
msgstr "Отрицательный / Унарный Отрицательный"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:242
msgid "``*`` ``/`` ``%``"
msgstr "``*`` ``/`` ``%``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:242
msgid "Multiplication / Division / Remainder"
msgstr "Умножение / Деление / Остаток от деления"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:244
msgid ""
"These operators have the same behavior as C++. Integer division is truncated "
"rather than returning a fractional number, and the % operator is only "
"available for ints (\"fmod\" for floats)"
msgstr ""
"Эти операторы ведут себя так же, как и в C++. Целочисленное деление "
"усекается, а не возвращает дробное число, и оператор % доступен только для "
"значений типа int(\"fmod\" для типа float)"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:250
msgid "``+``"
msgstr "``+``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:250
#, fuzzy
msgid "Addition / Concatenation of arrays"
msgstr "Прибавление / Конкатенация массивов"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:252
msgid "``-``"
msgstr "``-``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:252
msgid "Subtraction"
msgstr "Вычитание"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:254
msgid "``<<`` ``>>``"
msgstr "``<<`` ``>>``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:254
#, fuzzy
msgid "Bit shifting"
msgstr "Битовый Сдвиг"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:256
msgid "``&``"
msgstr "``&``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:256
msgid "Bitwise AND"
msgstr "Побитовое И"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:258
msgid "``^``"
msgstr "``^``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:258
msgid "Bitwise XOR"
msgstr "Побитовое Исключающее ИЛИ"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:260
msgid "``|``"
msgstr "``|``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:260
msgid "Bitwise OR"
msgstr "Побитовое ИЛИ"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:262
msgid "``<`` ``>`` ``==`` ``!=`` ``>=`` ``<=``"
msgstr "``<`` ``>`` ``==`` ``!=`` ``>=`` ``<=``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:262
msgid "Comparisons"
msgstr "Сравнения"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:264
msgid "``in``"
msgstr "``in``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:264
#, fuzzy
msgid "Content test"
msgstr "Тестирование контента"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:266
msgid "``!`` ``not``"
msgstr "``!`` ``not``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:266
msgid "Boolean NOT"
msgstr "Логическое НЕТ"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:268
msgid "``and`` ``&&``"
msgstr "``and`` ``&&``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:268
msgid "Boolean AND"
msgstr "Логическое И"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:270
msgid "``or`` ``||``"
msgstr "``or`` ``||``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:270
msgid "Boolean OR"
msgstr "Логическое ИЛИ"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:272
msgid "``if x else``"
msgstr "``if x else``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:272
msgid "Ternary if/else"
msgstr "Тернарный оператор Если/Иначе (if/else)"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:274
msgid "``as``"
msgstr "``as``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:274
#, fuzzy
msgid "Type casting"
msgstr "Тестируемые"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:276
msgid "``=`` ``+=`` ``-=`` ``*=`` ``/=`` ``%=`` ``&=`` ``|=``"
msgstr "``=`` ``+=`` ``-=`` ``*=`` ``/=`` ``%=`` ``&=`` ``|=``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:276
#, fuzzy
msgid "Assignment (lowest priority)"
msgstr "Присваивание, Низкий Приоритет"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:280
msgid "Literals"
msgstr "Литералы"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:283
msgid "**Literal**"
msgstr "**Литерал**"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:283
msgid "**Type**"
msgstr "**Тип**"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:285
msgid "``45``"
msgstr "``45``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:285
msgid "Base 10 integer"
msgstr "Целое число в десятичной системе счисления"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:287
msgid "``0x8F51``"
msgstr "``0x8F51``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:287
#, fuzzy
msgid "Base 16 (hexadecimal) integer"
msgstr "Целое число в шестнадцатеричной системе счисления"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:289
#, fuzzy
msgid "``0b101010``"
msgstr "``0b101010``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:289
msgid "Base 2 (binary) integer"
msgstr "Целое число в двоичной системе счисления"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:291
msgid "``3.14``, ``58.1e-10``"
msgstr "``3.14``, ``58.1e-10``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:291
#, fuzzy
msgid "Floating-point number (real)"
msgstr "Число с плавающей точкой (вещественное число)"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:293
msgid "``\"Hello\"``, ``\"Hi\"``"
msgstr "``\"Привет\"``, ``\"Дарова!\"``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:293
msgid "Strings"
msgstr "Строки"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:295
msgid "``\"\"\"Hello\"\"\"``"
msgstr "``\"\"\"Приииивет\"\"\"``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:295
msgid "Multiline string"
msgstr "Многострочная строка"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:297
msgid "``@\"Node/Label\"``"
msgstr "``@\"Node/Label\"``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:297
#, fuzzy
msgid ":ref:`class_NodePath` or StringName"
msgstr "NodePath или StringName"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:299
#, fuzzy
msgid "``$NodePath``"
msgstr "Путь ресурса"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:299
msgid "Shorthand for ``get_node(\"NodePath\")``"
msgstr "Сокращение для ``get_node(\"NodePath\")``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:303
msgid "Comments"
msgstr "Комментарии"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:305
msgid ""
"Anything from a ``#`` to the end of the line is ignored and is considered a "
"comment."
msgstr ""
"Все, что находится после символа ``#`` до конца строки игнорируется и "
"считается комментарием."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:315
msgid "Built-in types"
msgstr "Встроенные типы"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:317
#, fuzzy
msgid ""
"Built-in types are stack-allocated. They are passed as values. This means a "
"copy is created on each assignment or when passing them as arguments to "
"functions. The only exceptions are ``Array``\\ s and ``Dictionaries``, which "
"are passed by reference so they are shared. (Pooled arrays such as "
"``PoolByteArray`` are still passed as values.)"
msgstr ""
"Встроенные типы распределены по стекам. Они передаются как значения. Это "
"означает, что копия создается на каждом присваивании или при передаче их в "
"качестве аргументов функциям. Единственным исключением являются  ``Array`` и "
"``Dictionaries``, которые передаются по ссылке и являются общими. (Не "
"``PoolArray`` типа ``PoolByteArray``, но они тоже передаются как значения, "
"поэтому учитывайте это при решении, что именно нужно использовать для Вашего "
"проекта!)"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:324
msgid "Basic built-in types"
msgstr "Базовые встроенные типы"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:326
msgid "A variable in GDScript can be assigned to several built-in types."
msgstr ""
"Переменная в GDScript может быть определена несколькими встроенными типами."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:329
msgid "null"
msgstr "null"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:331
msgid ""
"``null`` is an empty data type that contains no information and can not be "
"assigned any other value."
msgstr ""
"``null`` - это пустой тип данных, который не содержит никакой информации и "
"не может принимать другие значения."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:335
#, fuzzy
msgid ":ref:`bool <class_bool>`"
msgstr ":ref:`Color <class_Color>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:337
#, fuzzy
msgid "Short for \"boolean\", it can only contain ``true`` or ``false``."
msgstr "Булевый тип данных может содержать только ``true`` или ``false``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:340
#, fuzzy
msgid ":ref:`int <class_int>`"
msgstr ":ref:`String <class_String>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:342
msgid ""
"Short for \"integer\", it stores whole numbers (positive and negative). It "
"is stored as a 64-bit value, equivalent to \"int64_t\" in C++."
msgstr ""
"Сокращённо от \"integer\", содержит целые числа (положительные и "
"отрицательные). Хранится как 64-битное значение, эквивалент \"int64_t\" в C+"
"+."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:346
#, fuzzy
msgid ":ref:`float <class_float>`"
msgstr ":ref:`Quat <class_Quat>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:348
#, fuzzy
msgid ""
"Stores real numbers, including decimals, using floating-point values. It is "
"stored as a 64-bit value, equivalent to \"double\" in C++. Note: Currently, "
"data structures such as Vector2, Vector3, and PoolRealArray store 32-bit "
"single-precision \"float\" values."
msgstr ""
"Содержит действительные числа, включая десятичные, используя значения с "
"плавающей запятой. Хранится как 64-битное значение, эквивалент \"double\" в C"
"++. Примечание: В настоящее время структуры данных, такие как Vector2, "
"Vector3 и PoolRealArray хранятся как 32-битные плавающие одинарные значения."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:354
msgid ":ref:`String <class_String>`"
msgstr ":ref:`String <class_String>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:356
#, fuzzy
msgid ""
"A sequence of characters in `Unicode format <https://en.wikipedia.org/wiki/"
"Unicode>`_. Strings can contain `standard C escape sequences <https://en."
"wikipedia.org/wiki/Escape_sequences_in_C>`_. GDScript also supports :ref:"
"`doc_gdscript_printf`."
msgstr ""
"Последовательность символов в формате `Unicode <https://en.wikipedia.org/"
"wiki/Unicode>`_. Строки могут содержать `стандартные escape-"
"последовательности C <https://en.wikipedia.org/wiki/"
"Escape_sequences_in_C>`_. GDScript поддерживает: ref:`форматирование строки, "
"то есть функция printf <doc_gdscript_printf>`."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:362
msgid "Vector built-in types"
msgstr "Векторные встроенные типы"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:365
msgid ":ref:`Vector2 <class_Vector2>`"
msgstr ":ref:`Vector2 <class_Vector2>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:367
#, fuzzy
msgid ""
"2D vector type containing ``x`` and ``y`` fields. Can also be accessed as an "
"array."
msgstr ""
"2D вектор, содержащий поля ``x`` и ``y``. Также может быть доступен как "
"массив."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:371
msgid ":ref:`Rect2 <class_Rect2>`"
msgstr ":ref:`Rect2 <class_Rect2>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:373
#, fuzzy
msgid ""
"2D Rectangle type containing two vectors fields: ``position`` and ``size``. "
"Also contains an ``end`` field which is ``position + size``."
msgstr ""
"2D Прямоугольник, содержащий два поля векторов: ``position`` и ``size``. "
"Альтернативно содержит поле ``end``, которое представляет собой ``position + "
"size``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:377
msgid ":ref:`Vector3 <class_Vector3>`"
msgstr ":ref:`Vector3 <class_Vector3>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:379
msgid ""
"3D vector type containing ``x``, ``y`` and ``z`` fields. This can also be "
"accessed as an array."
msgstr ""
"3D векторный тип, содержащий поля ``x``, ``y`` и ``z``. Может быть получен "
"как массив."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:383
msgid ":ref:`Transform2D <class_Transform2D>`"
msgstr ":ref:`Transform2D <class_Transform2D>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:385
#, fuzzy
msgid "3×2 matrix used for 2D transforms."
msgstr "Матрица 3x2, используемая для двумерных преобразований."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:388
msgid ":ref:`Plane <class_Plane>`"
msgstr ":ref:`Plane <class_Plane>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:390
#, fuzzy
msgid ""
"3D Plane type in normalized form that contains a ``normal`` vector field and "
"a ``d`` scalar distance."
msgstr ""
"Тип трехмерной плоскости в нормализованной форме, которая содержит "
"``normal`` векторное поле и ``d`` скалярное расстояние."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:394
msgid ":ref:`Quat <class_Quat>`"
msgstr ":ref:`Quat <class_Quat>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:396
msgid ""
"Quaternion is a datatype used for representing a 3D rotation. It's useful "
"for interpolating rotations."
msgstr ""
"Quaternion - это тип данных, используемый для представления трехмерного "
"вращения. Полезно для интерполяции вращений."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:400
msgid ":ref:`AABB <class_AABB>`"
msgstr ":ref:`AABB <class_AABB>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:402
#, fuzzy
msgid ""
"Axis-aligned bounding box (or 3D box) contains 2 vectors fields: "
"``position`` and ``size``. Also contains an ``end`` field which is "
"``position + size``."
msgstr ""
"Выровненный по оси ограничительная рамка (или трехмерная коробка) содержит 2 "
"поля типа Vector: ``position`` и ``size``. Альтернативно содержит поле "
"``end``, которое является ``position+size``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:407
msgid ":ref:`Basis <class_Basis>`"
msgstr ":ref:`Basis <class_Basis>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:409
msgid ""
"3x3 matrix used for 3D rotation and scale. It contains 3 vector fields "
"(``x``, ``y`` and ``z``) and can also be accessed as an array of 3D vectors."
msgstr ""
"Матрица 3x3, используемая для трехмерного вращения и масштабирования. Он "
"содержит 3 векторных поля (``x``, ``y`` и ``z``), а также доступен в виде "
"массива трехмерных векторов."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:414
msgid ":ref:`Transform <class_Transform>`"
msgstr ":ref:`Transform <class_Transform>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:416
msgid ""
"3D Transform contains a Basis field ``basis`` and a Vector3 field ``origin``."
msgstr ""
"3D-преобразование содержит поле Basis ``basis`` и поле Vector3 ``origin``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:420
msgid "Engine built-in types"
msgstr "Встроенные типы движка"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:423
msgid ":ref:`Color <class_Color>`"
msgstr ":ref:`Color <class_Color>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:425
msgid ""
"Color data type contains ``r``, ``g``, ``b``, and ``a`` fields. It can also "
"be accessed as ``h``, ``s``, and ``v`` for hue/saturation/value."
msgstr ""
"Color - тип данных цвета, содержит поля  ``r``, ``g``, ``b``, и ``a``. Он "
"также доступен как ``h``, ``s``, и ``v`` для оттенка(hue)/"
"насыщенности(saturation)/значения(value)."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:429
msgid ":ref:`NodePath <class_NodePath>`"
msgstr ":ref:`NodePath <class_NodePath>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:431
msgid ""
"Compiled path to a node used mainly in the scene system. It can be easily "
"assigned to, and from, a String."
msgstr ""
"Составной путь к узлу, используемый в основном в системе сцен. Он может быть "
"легко переведён в строку и из неё."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:435
msgid ":ref:`RID <class_RID>`"
msgstr ":ref:`RID <class_RID>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:437
#, fuzzy
msgid "Resource ID (RID). Servers use generic RIDs to reference opaque data."
msgstr ""
"Resource ID (RID). Серверы используют общие RID для создания ссылок на "
"непрозрачные данные."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:440
msgid ":ref:`Object <class_Object>`"
msgstr ":ref:`Object <class_Object>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:442
msgid "Base class for anything that is not a built-in type."
msgstr "Базовый класс для всего, что не является встроенным типом."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:445
msgid "Container built-in types"
msgstr "Встроенные типы контейнеров"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:448
msgid ":ref:`Array <class_Array>`"
msgstr ":ref:`Array <class_Array>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:450
#, fuzzy
msgid ""
"Generic sequence of arbitrary object types, including other arrays or "
"dictionaries (see below). The array can resize dynamically. Arrays are "
"indexed starting from index ``0``. Negative indices count from the end."
msgstr ""
"Общая последовательность любых типов объектов, включая другие массивы или "
"словари (см. ниже). Массив может изменяться динамически. Массивы "
"индексируются, начиная с индекса ``0``. Начиная с Godot 2.1, индексы могут "
"быть отрицательными, как и в Python, считая с конца."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:464
#, fuzzy
msgid ""
"GDScript arrays are allocated linearly in memory for speed. Large arrays "
"(more than tens of thousands of elements) may however cause memory "
"fragmentation. If this is a concern, special types of arrays are available. "
"These only accept a single data type. They avoid memory fragmentation and "
"use less memory, but are atomic and tend to run slower than generic arrays. "
"They are therefore only recommended to use for large data sets:"
msgstr ""
"Массивы в GDScript выделяются в памяти линейно для повышения скорости "
"работы. Однако большие массивы (более десятков тысяч элементов) могут "
"привести к фрагментации памяти. Если это проблема, то доступны специальные "
"типы массивов. Они принимают только один тип данных. Они избегают "
"фрагментации памяти и также потребляют меньше памяти, но являются атомными "
"и, как правило, работают медленнее, чем обычные массивы. Поэтому их "
"рекомендуется использовать только для больших наборов данных:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:471
msgid ""
":ref:`PoolByteArray <class_PoolByteArray>`: An array of bytes (integers from "
"0 to 255)."
msgstr ""
":ref:`PoolByteArray <class_PoolByteArray>`: Массив байтов (целые числа от 0 "
"до 255)."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:472
msgid ":ref:`PoolIntArray <class_PoolIntArray>`: An array of integers."
msgstr ":ref:`PoolIntArray <class_PoolIntArray>`: Массив целых чисел."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:473
msgid ":ref:`PoolRealArray <class_PoolRealArray>`: An array of floats."
msgstr ""
":ref:`PoolRealArray <class_PoolRealArray>`: Массив чисел с плавающей точкой."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:474
msgid ":ref:`PoolStringArray <class_PoolStringArray>`: An array of strings."
msgstr ":ref:`PoolStringArray <class_PoolStringArray>`: Массив строк."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:475
msgid ""
":ref:`PoolVector2Array <class_PoolVector2Array>`: An array of :ref:`Vector2 "
"<class_Vector2>` objects."
msgstr ""
":ref:`PoolVector2Array <class_PoolVector2Array>`: Массив объектов типа :ref:"
"`Vector2 <class_Vector2>`."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:476
msgid ""
":ref:`PoolVector3Array <class_PoolVector3Array>`: An array of :ref:`Vector3 "
"<class_Vector3>` objects."
msgstr ""
":ref:`PoolVector3Array <class_PoolVector3Array>`: Массив объектов типа :ref:"
"`Vector3 <class_Vector3>`."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:477
msgid ""
":ref:`PoolColorArray <class_PoolColorArray>`: An array of :ref:`Color "
"<class_Color>` objects."
msgstr ""
":ref:`PoolColorArray <class_PoolColorArray>`: Массив объектов типа :ref:"
"`Color <class_Color>`."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:480
msgid ":ref:`Dictionary <class_Dictionary>`"
msgstr ":ref:`Dictionary <class_Dictionary>`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:482
msgid "Associative container which contains values referenced by unique keys."
msgstr ""
"Ассоциативный контейнер, содержащий значения, на которые ссылаются "
"уникальные ключи."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:495
#, fuzzy
msgid ""
"Lua-style table syntax is also supported. Lua-style uses ``=`` instead of ``:"
"`` and doesn't use quotes to mark string keys (making for slightly less to "
"write). However, keys written in this form can't start with a digit (like "
"any GDScript identifier)."
msgstr ""
"Также поддерживается синтаксис таблиц в стиле Lua. Lua-стиль использует "
"``=`` вместо ``:`` и не использует кавычки для разметки ключей строк (что "
"делает написание немного быстрее). Обратите внимание, что, как и любой "
"другой идентификатор GDScript, ключи, написанные в этом виде, не могут "
"начинаться с цифры."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:509
msgid ""
"To add a key to an existing dictionary, access it like an existing key and "
"assign to it::"
msgstr ""
"Чтобы добавить ключ к существующему словарю, воспользуйтесь им как "
"существующим и назначьте ему::"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:525
msgid ""
"The bracket syntax can be used to access properties of any :ref:"
"`class_Object`, not just Dictionaries. Keep in mind it will cause a script "
"error when attempting to index a non-existing property. To avoid this, use "
"the :ref:`Object.get() <class_Object_method_get>` and :ref:`Object.set() "
"<class_Object_method_set>` methods instead."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:532
msgid "Data"
msgstr "Данные"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:535
msgid "Variables"
msgstr "Переменные"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:537
msgid ""
"Variables can exist as class members or local to functions. They are created "
"with the ``var`` keyword and may, optionally, be assigned a value upon "
"initialization."
msgstr ""
"Переменные могут существовать как члены класса или быть локальными для "
"функций. Они создаются с помощью ключевого слова ``var`` и при желании, есть "
"возможность присвоить значение при инициализации."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:548
msgid ""
"Variables can optionally have a type specification. When a type is "
"specified, the variable will be forced to have always that same type, and "
"trying to assign an incompatible value will raise an error."
msgstr ""
"Опционально: Переменные могут иметь спецификацию типа. Когда тип указан, "
"переменная всегда должна иметь один и тот же тип, а попытка присвоить "
"несовместимое значение вызовет ошибку."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:552
msgid ""
"Types are specified in the variable declaration using a ``:`` (colon) symbol "
"after the variable name, followed by the type."
msgstr ""
"Типы указываются при объявлении переменной символом ``:`` (двоеточие) после "
"имени переменной, за которым следует тип."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:560
msgid ""
"If the variable is initialized within the declaration, the type can be "
"inferred, so it's possible to omit the type name::"
msgstr ""
"Если переменная инициализирована в объявлении, то можно предугадать типе "
"сразу, поэтому можно не писать имя типа::"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:566
msgid ""
"Type inference is only possible if the assigned value has a defined type, "
"otherwise it will raise an error."
msgstr ""
"Предсказание типа возможно только в том случае, если заданное значение имеет "
"определенный тип, в противном случае возникает ошибка."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:569
msgid "Valid types are:"
msgstr "Поддерживаемые типы:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:571
#, fuzzy
msgid "Built-in types (Array, Vector2, int, String, etc.)."
msgstr "Встроенные типы (Array, Vector2, int, String и т.д.)"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:572
#, fuzzy
msgid "Engine classes (Node, Resource, Reference, etc.)."
msgstr "Классы движка (Node, Resource, Reference, etc.)"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:573
msgid ""
"Constant names if they contain a script resource (``MyScript`` if you "
"declared ``const MyScript = preload(\"res://my_script.gd\")``)."
msgstr ""
"Константы, если они содержат скрипт ресурса (``MyScript`` если вы объявили "
"``const MyScript = preload(\"res://my_script.gd\")``)."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:574
#, fuzzy
msgid ""
"Other classes in the same script, respecting scope (``InnerClass."
"NestedClass`` if you declared ``class NestedClass`` inside the ``class "
"InnerClass`` in the same scope)."
msgstr ""
"Другие классы в том же скрипте, учитывающие область видимости (``InnerClass."
"NestedClass`` если вы объявили ``сlass NestedClass`` внутри ``сlass "
"InnerClass`` в той же области видимости)"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:575
msgid "Script classes declared with the ``class_name`` keyword."
msgstr "Классы объявленные в скрипте с ключевым словом ``class_name``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:578
msgid "Casting"
msgstr "Приведение переменных"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:580
msgid ""
"Values assigned to typed variables must have a compatible type. If it's "
"needed to coerce a value to be of a certain type, in particular for object "
"types, you can use the casting operator ``as``."
msgstr ""
"Значения, присваиваемые типизированным переменным, должны иметь совместимый "
"тип. Если необходимо заставить значение быть определенного типа, в "
"частности, для типов объектов, можно использовать оператор приведения ``as``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:584
#, fuzzy
msgid ""
"Casting between object types results in the same object if the value is of "
"the same type or a subtype of the cast type."
msgstr ""
"Приведение типов объектов приводит к одному и тому же объекту, если значение "
"имеет один и тот же тип или подтип приведенного типа."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:592
msgid ""
"If the value is not a subtype, the casting operation will result in a "
"``null`` value."
msgstr ""
"Если значение не является подтипом, операция приведения приведет к получению "
"значения ``null``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:599
msgid ""
"For built-in types, they will be forcibly converted if possible, otherwise "
"the engine will raise an error."
msgstr ""
"Для встроенных типов они будут принудительно преобразованы, если это "
"возможно, в противном случае движок выдаст ошибку."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:608
#, fuzzy
msgid ""
"Casting is also useful to have better type-safe variables when interacting "
"with the scene tree::"
msgstr ""
"Приведение также полезно для получения более надежных типов переменных при "
"взаимодействии с деревом::"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:618
msgid "Constants"
msgstr "Константы"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:620
msgid ""
"Constants are similar to variables, but must be constants or constant "
"expressions and must be assigned on initialization."
msgstr ""
"Константы аналогичны переменным, но должны быть постоянными или постоянными "
"выражениями и присваиваются при инициализации."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:634
msgid ""
"Although the type of constants is inferred from the assigned value, it's "
"also possible to add explicit type specification::"
msgstr ""
"Хотя тип констант берется из присвоенного значения, можно также явно описать "
"тип::"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:640
msgid "Assigning a value of an incompatible type will raise an error."
msgstr "Присвоение значения несовместимого типа приведет к ошибке."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:644
msgid ""
"Since arrays and dictionaries are passed by reference, constants are \"flat"
"\". This means that if you declare a constant array or dictionary, it can "
"still be modified afterwards. They can't be reassigned with another value "
"though."
msgstr ""

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:649
msgid "Enums"
msgstr "Перечисления"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:651
msgid ""
"Enums are basically a shorthand for constants, and are pretty useful if you "
"want to assign consecutive integers to some constant."
msgstr ""
"Перечисления это фактически сокращения для констант, и они очень полезны "
"если вы хотите присвоить конкретные числовые значения некоторым константам."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:654
#, fuzzy
msgid ""
"If you pass a name to the enum, it will put all the keys inside a constant "
"dictionary of that name."
msgstr ""
"Если вы передадите имя перечислению, оно поместит все значения в постоянный "
"словарь (constant dictionary) с этим именем."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:657
msgid ""
"In Godot 3.1 and later, keys in a named enum are not registered as global "
"constants. They should be accessed prefixed by the enum's name (``Name."
"KEY``); see an example below."
msgstr ""
"В Godot версии 3.1 и выше ключи именованного перечисления не регистрируются "
"как глобальные константы. Для доступа к ним необходим префикс в виде "
"названия перечисления (``Name.KEY``); см. пример ниже."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:677
msgid "Functions"
msgstr "Функции"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:679
msgid ""
"Functions always belong to a `class <Classes_>`_. The scope priority for "
"variable look-up is: local → class member → global. The ``self`` variable is "
"always available and is provided as an option for accessing class members, "
"but is not always required (and should *not* be sent as the function's first "
"argument, unlike Python)."
msgstr ""
"Функции всегда принадлежат `классу <Classes_>`_. Приоритет области видимости "
"для переменных: локальный → член класса → глобальный. Переменная ``self`` "
"всегда доступна и предоставляется в опционально для доступа к элементам "
"класса, но не всегда требуется (и в отличие от Python, она *не* должна "
"передаваться в качестве первого аргумента функции)."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:692
msgid ""
"A function can ``return`` at any point. The default return value is ``null``."
msgstr ""
"Функция может ``return`` (возвращать) значения. Если вы ничего не "
"возвращаете, то она является ``null``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:694
msgid ""
"Functions can also have type specification for the arguments and for the "
"return value. Types for arguments can be added in a similar way to "
"variables::"
msgstr ""
"Функции могут также иметь спецификацию типов для аргументов и возвращаемого "
"значения. Типы аргументам можно добавлять аналогично переменным::"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:700
msgid ""
"If a function argument has a default value, it's possible to infer the type::"
msgstr ""
"Если аргумент функции имеет значение по умолчанию, то можно спрогнозировать "
"тип::"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:705
msgid ""
"The return type of the function can be specified after the arguments list "
"using the arrow token (``->``)::"
msgstr ""
"Тип возврата функции может быть указан после списка аргументов с помощью "
"символа стрелки (``->``)::"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:711
msgid ""
"Functions that have a return type **must** return a proper value. Setting "
"the type as ``void`` means the function doesn't return anything. Void "
"functions can return early with the ``return`` keyword, but they can't "
"return any value."
msgstr ""
"Функции, имеющие тип возврата **должны** возвращать правильное значение. Тип "
"``void`` означает, что функция ничего не возвращает. Пустые функции могут "
"возвращаться раньше с ключевым словом ``return``, но они не могут возвращать "
"значения."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:720
msgid ""
"Non-void functions must **always** return a value, so if your code has "
"branching statements (such as an ``if``/``else`` construct), all the "
"possible paths must have a return. E.g., if you have a ``return`` inside an "
"``if`` block but not after it, the editor will raise an error because if the "
"block is not executed, the function won't have a valid value to return."
msgstr ""
"Не пустые (Non-void) функции должны **всегда** возвращать значение, поэтому "
"если в вашем коде есть ветвистые выражения (такие как конструкция ``if``/"
"``else``), все возможные пути должны иметь ответвление. Например, если "
"``return`` внутри блока ``if``, но не после него, то редактор выдаст ошибку, "
"потому что если условие не будет выполнено, то функция не будет иметь "
"действительного значения для возврата."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:728
#, fuzzy
msgid "Referencing functions"
msgstr "Ссылочные функции"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:730
#, fuzzy
msgid ""
"Contrary to Python, functions are *not* first-class objects in GDScript. "
"This means they cannot be stored in variables, passed as an argument to "
"another function or be returned from other functions. This is for "
"performance reasons."
msgstr ""
"В отличие от Python, функции *не* являются объектами первого класса в "
"GDScript. Это означает, что они не могут храниться в переменных, "
"передаваться в качестве аргумента другой функции или возвращаться из других "
"функций. Это все ради производительности."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:734
#, fuzzy
msgid ""
"To reference a function by name at run-time, (e.g. to store it in a "
"variable, or pass it to another function as an argument) one must use the "
"``call`` or ``funcref`` helpers::"
msgstr ""
"Для обращения к функции по имени во время выполнения (например, для хранения "
"ее в переменной или передачи другой функции в качестве аргумента) необходимо "
"использовать помощники ``call`` или ``funcref``::"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:748
msgid "Static functions"
msgstr "Статические функции"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:750
#, fuzzy
msgid ""
"A function can be declared static. When a function is static, it has no "
"access to the instance member variables or ``self``. This is mainly useful "
"to make libraries of helper functions::"
msgstr ""
"Функция может быть объявлена как статическая. Когда функция статична, она не "
"имеет доступа к переменным, входящим в состав экземпляра, или к ``self``. "
"Это в основном полезно для создания библиотек вспомогательных функций:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:759
msgid "Statements and control flow"
msgstr "Операторы и контроль потока"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:761
msgid ""
"Statements are standard and can be assignments, function calls, control flow "
"structures, etc (see below). ``;`` as a statement separator is entirely "
"optional."
msgstr ""
"Операторы являются стандартными и могут присваивать, вызовы функций, "
"структуры управления потоком и т.д. (см. ниже). Разделитель ``;``  является "
"абсолютно необязательным."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:766
msgid "if/else/elif"
msgstr "if/else/elif"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:768
msgid ""
"Simple conditions are created by using the ``if``/``else``/``elif`` syntax. "
"Parenthesis around conditions are allowed, but not required. Given the "
"nature of the tab-based indentation, ``elif`` can be used instead of "
"``else``/``if`` to maintain a level of indentation."
msgstr ""
"Простые условия создаются с помощью такого синтаксиса ``if``/``else``/"
"``else``/``elif``. Скобки вокруг условий допускаются, но не требуются. "
"Учитывая характер отступа на основе табуляции, можно использовать ``elif`` "
"вместо ``else``/``if`` для сохранения уровня отступа."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:782
msgid "Short statements can be written on the same line as the condition::"
msgstr ""
"Небольшое выражение может быть написано на той же строке, что и условие::"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:789
#, fuzzy
msgid ""
"Sometimes, you might want to assign a different initial value based on a "
"boolean expression. In this case, ternary-if expressions come in handy::"
msgstr ""
"Иногда на основе логического выражения может потребоваться присвоить другое "
"начальное значение. В этом случае могут пригодиться выражения тернарного if::"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:798
msgid ""
"Simple loops are created by using ``while`` syntax. Loops can be broken "
"using ``break`` or continued using ``continue``:"
msgstr ""
"Простые циклы создаются с помощью `` while``. Циклы могут быть разорваны с "
"помощью команды ``break`` или продолжены (пропускается данная итерация) с "
"помощью ``continue``:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:809
#, fuzzy
msgid ""
"To iterate through a range, such as an array or table, a *for* loop is used. "
"When iterating over an array, the current array element is stored in the "
"loop variable. When iterating over a dictionary, the *key* is stored in the "
"loop variable."
msgstr ""
"Чтобы итерировать заданный диапазон, например, массив или таблицу, "
"используется цикл *for*. При итерации над массивом элемент текущего массива "
"хранится в переменной цикла. При итерации по словарю в переменной цикла "
"хранится *индекс*."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:844
msgid ""
"A ``match`` statement is used to branch execution of a program. It's the "
"equivalent of the ``switch`` statement found in many other languages, but "
"offers some additional features."
msgstr ""
"Оператор ``match`` используется для ветвления. Это эквивалентно оператору "
"``switch``, встречающемуся на многих других языках, но ``match`` предлагает "
"некоторые дополнительные возможности."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:847
#, fuzzy
msgid "Basic syntax::"
msgstr "Основной синтаксис:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:858
msgid "**Crash-course for people who are familiar with switch statements**:"
msgstr "**Ускоренный курс для людей, знакомых с правилами switch**:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:860
#, fuzzy
msgid "Replace ``switch`` with ``match``."
msgstr "Замените ``switch`` на ``match``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:861
#, fuzzy
msgid "Remove ``case``."
msgstr "Уберите ``case``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:862
#, fuzzy
msgid ""
"Remove any ``break``\\ s. If you don't want to ``break`` by default, you can "
"use ``continue`` for a fallthrough."
msgstr ""
"Удалите все ``break``. Если вы не хотите чтобы ``break`` был по умолчанию, "
"вы можете использовать ``continue`` для продолжения проверки."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:863
msgid "Change ``default`` to a single underscore."
msgstr "Смените ``default`` на единичное подчеркивание."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:866
msgid "**Control flow**:"
msgstr "**Управление потоком**:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:868
#, fuzzy
msgid ""
"The patterns are matched from top to bottom. If a pattern matches, the first "
"corresponding block will be executed. After that, the execution continues "
"below the ``match`` statement. You can use ``continue`` to stop execution in "
"the current block and check for an additional match in the patterns below it."
msgstr ""
"Шаблоны проверяются сверху вниз. Если шаблон совпадает с значением, то будет "
"выполнен соответствующий блок. После этого исполнение продолжится ниже "
"оператора ``match`` (то есть другие варианты пропускаются). Если вы хотите "
"продолжить проверку, вы можете использовать ``continue`` для остановки "
"исполнения в текущем блоке и проверки тех, что ниже него."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:872
msgid "There are 6 pattern types:"
msgstr "Существует 6 типов шаблонов:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:884
#, fuzzy
msgid "Constant pattern"
msgstr "постоянный (константный) шаблон"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:875
#, fuzzy
msgid "Constant primitives, like numbers and strings::"
msgstr "постоянные (константные) примитивы, такие как числа и строки ::"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:896
#, fuzzy
msgid "Variable pattern"
msgstr "переменный шаблон"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:887
#, fuzzy
msgid "Matches the contents of a variable/enum::"
msgstr "подбор содержимого переменной/перечисления(enum) ::"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:910
#, fuzzy
msgid "Wildcard pattern"
msgstr "шаблон подстановки"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:899
#, fuzzy
msgid "This pattern matches everything. It's written as a single underscore."
msgstr ""
"Этот шаблон всегда что-то найдет. Это пишется как единичное подчёркивание."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:901
#, fuzzy
msgid ""
"It can be used as the equivalent of the ``default`` in a ``switch`` "
"statement in other languages::"
msgstr ""
"Он может быть использован как эквивалент выражения ``default`` в выражении "
"``switch`` на других языках. ::"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:923
#, fuzzy
msgid "Binding pattern"
msgstr "шаблон привязки"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:913
#, fuzzy
msgid ""
"A binding pattern introduces a new variable. Like the wildcard pattern, it "
"matches everything - and also gives that value a name. It's especially "
"useful in array and dictionary patterns::"
msgstr ""
"Шаблон привязки вводит новую переменную. Как и шаблон подстановки, он "
"соответствует всему, а также присваивает этому значению имя. Это особенно "
"полезно в шаблонах массивов и словарей. ::"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:944
#, fuzzy
msgid "Array pattern"
msgstr "шаблон массива"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:926
#, fuzzy
msgid ""
"Matches an array. Every single element of the array pattern is a pattern "
"itself, so you can nest them."
msgstr ""
"ищет совпадение с массивом. Каждый отдельный элемент шаблона массива "
"представляет собой сам шаблон, так что вы можете разместить их."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:928
msgid ""
"The length of the array is tested first, it has to be the same size as the "
"pattern, otherwise the pattern doesn't match."
msgstr ""
"Сначала проверяется длина массива, она должна быть того же размера, что и "
"шаблон, в противном случае шаблон не совпадет."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:930
#, fuzzy
msgid ""
"**Open-ended array**: An array can be bigger than the pattern by making the "
"last subpattern ``..``."
msgstr ""
"**Открытый массив**: Массив может быть больше, чем массив, создавая "
"последнюю подшаблонку ``..``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:932
#, fuzzy
msgid "Every subpattern has to be comma-separated."
msgstr "Каждый подшаблон должен быть разделен запятыми."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:971
#, fuzzy
msgid "Dictionary pattern"
msgstr "шаблон словаря"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:947
msgid ""
"Works in the same way as the array pattern. Every key has to be a constant "
"pattern."
msgstr ""
"Работает так же, как и шаблон массива. Каждый ключ должен быть постоянным "
"шаблоном (constant pattern)."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:949
msgid ""
"The size of the dictionary is tested first, it has to be the same size as "
"the pattern, otherwise the pattern doesn't match."
msgstr ""
"Сначала проверяется размер словаря, он должен быть того же размера, что и "
"шаблон, в противном случае шаблон не совпадет."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:951
#, fuzzy
msgid ""
"**Open-ended dictionary**: A dictionary can be bigger than the pattern by "
"making the last subpattern ``..``."
msgstr ""
"**Открытый словарь**: Словарь может быть больше шаблона, если сделать "
"последний подшаблоном - ``..``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:953
msgid "Every subpattern has to be comma separated."
msgstr "Каждый подшаблон должен быть разделен запятыми."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:955
msgid ""
"If you don't specify a value, then only the existence of the key is checked."
msgstr "Если вы не указываете значение, то проверяется только наличие ключа."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:957
#, fuzzy
msgid "A value pattern is separated from the key pattern with a ``:``."
msgstr "Шаблон значения отделяется от шаблона ключа символом ``:`` ::"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:984
#, fuzzy
msgid "Multiple patterns"
msgstr "Множественный шаблон:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:974
#, fuzzy
msgid ""
"You can also specify multiple patterns separated by a comma. These patterns "
"aren't allowed to have any bindings in them."
msgstr ""
"Также можно указать несколько разных шаблонов, разделенных запятой. Эти "
"шаблоны не должны иметь никаких привязок в них. ::"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:987
msgid "Classes"
msgstr "Классы"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:989
#, fuzzy
msgid ""
"By default, all script files are unnamed classes. In this case, you can only "
"reference them using the file's path, using either a relative or an absolute "
"path. For example, if you name a script file ``character.gd``::"
msgstr ""
"По умолчанию, все файлы скриптов это классы без имен. В этом случае вы "
"можете ссылаться на них только по пути файла, с помощью относительного или "
"абсолютного пути. Например, если вы назовете файл скрипта ``character.gd``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1002
#, fuzzy
msgid ""
"Instead, you can give your class a name to register it as a new type in "
"Godot's editor. For that, you use the ``class_name`` keyword. You can add an "
"optional comma followed by a path to an image, to use it as an icon. Your "
"class will then appear with its new icon in the editor::"
msgstr ""
"Вместо этого, вы можете дать вашему классу имя, чтобы зарегистрировать его "
"как новый тип в редакторе Godot. Для этого используйте ключевое слово "
"'class_name'. Также Вы можете, добавить запятую с указанием пути к "
"изображению, чтобы использовать ее в качестве иконки. Ваш класс появится с "
"этим значком в редакторе:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1014
msgid "Here's a class file example:"
msgstr "Вот пример файла класса:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1036
#, fuzzy
msgid ""
"Godot's class syntax is compact: it can only contain member variables or "
"functions. You can use static functions, but not static member variables. In "
"the same way, the engine initializes variables every time you create an "
"instance, and this includes arrays and dictionaries. This is in the spirit "
"of thread safety, since scripts can be initialized in separate threads "
"without the user knowing."
msgstr ""
"Синтаксис класса в Godot компактен: он может содержать только внутренние "
"переменные или функции. Вы можете использовать статические функции, но не "
"статические внутренние переменные. Таким же образом, движок инициализирует "
"переменные каждый раз, когда вы создаете экземпляр, и это включает массивы и "
"словари. Это ради безопасности потока, так как скрипты могут быть "
"инициализированы в отдельных потоках без ведома пользователя."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1044
msgid "Inheritance"
msgstr "Наследование"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1046
#, fuzzy
msgid "A class (stored as a file) can inherit from:"
msgstr "Класс (хранимый в файле) может наследоваться от"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1048
#, fuzzy
msgid "A global class."
msgstr "Глобального класса"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1049
#, fuzzy
msgid "Another class file."
msgstr "Другого файла класса"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1050
msgid "An inner class inside another class file."
msgstr "Внутреннего класса внутри другого файла класса."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1052
msgid "Multiple inheritance is not allowed."
msgstr "Множественное наследование невозможно."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1054
#, fuzzy
msgid "Inheritance uses the ``extends`` keyword::"
msgstr "Наследование использует ключевое слово ``extends``:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1066
#, fuzzy
msgid ""
"To check if a given instance inherits from a given class, the ``is`` keyword "
"can be used::"
msgstr ""
"Для проверки что текущий экземпляр наследуется от заданного класса может "
"быть использовано ключевое слово ``is``:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1078
#, fuzzy
msgid ""
"To call a function in a *parent class* (i.e. one ``extend``-ed in your "
"current class), prepend ``.`` to the function name::"
msgstr ""
"Для вызова функции в *базовом классе* (т.е. функции ``extend`` (расширения) "
"в текущем классе), добавьте ``.`` к имени функции:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1083
#, fuzzy
msgid ""
"This is especially useful because functions in extending classes replace "
"functions with the same name in their parent classes. If you still want to "
"call them, you can prefix them with ``.`` (like the ``super`` keyword in "
"other languages)::"
msgstr ""
"Это особенно полезно, так как функции при расширении классов заменяют "
"одноименные функции в своих базовых классах. Так что если вы все еще хотите "
"обратится к ним, вы можете использовать ``.`` как ключевое слово ``super`` в "
"других языках:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1091
#, fuzzy
msgid ""
"Default functions like  ``_init``, and most notifications such as "
"``_enter_tree``, ``_exit_tree``, ``_process``, ``_physics_process``, etc. "
"are called in all parent classes automatically. There is no need to call "
"them explicitly when overloading them."
msgstr ""
"Помните, что функции по умолчанию, такие как  ``_init``, и большинство "
"уведомлений (notifications), таких как ``_enter_tree``, ``_exit_tree``, "
"``_process``, ``_physics_process`` и др. вызываются во всех базовых классах "
"автоматически. Таким образом, существует необходимость только явного вызова "
"функции при некоторой их перегрузке."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1098
msgid "Class Constructor"
msgstr "Конструктор класса"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1100
#, fuzzy
msgid ""
"The class constructor, called on class instantiation, is named ``_init``. As "
"mentioned earlier, the constructors of parent classes are called "
"automatically when inheriting a class. So, there is usually no need to call "
"``._init()`` explicitly."
msgstr ""
"Конструктор класса вызывается при создании экземпляра класса "
"(инстанциировании) и называется ``_init``. Как говорилось ранее, конструктор "
"класса-родителя вызывается автоматически, когда происходит наследование. "
"Таким образом, необходимости вызывать ``._init`` вручную обычно нет."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1105
#, fuzzy
msgid ""
"Unlike the call of a regular function, like in the above example with ``."
"some_func``, if the constructor from the inherited class takes arguments, "
"they are passed like this::"
msgstr ""
"В отличие от вызова обычной функции, как в примере выше с ``.some_func``, "
"если конструктор из унаследованного класса принимает аргументы, то они "
"передаются вот так:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1112
#, fuzzy
msgid "This is better explained through examples. Consider this scenario::"
msgstr "Это лучше объяснить на примере. Допустим у нас следующая ситуация:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1135
msgid "There are a few things to keep in mind here:"
msgstr "Здесь есть несколько вещей, который необходимо держать в голове:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1137
#, fuzzy
msgid ""
"If the inherited class (``State.gd``) defines a ``_init`` constructor that "
"takes arguments (``e`` in this case), then the inheriting class (``Idle."
"gd``) *must* define ``_init`` as well and pass appropriate parameters to "
"``_init`` from ``State.gd``."
msgstr ""
"если унаследованный класс (``State.gd``) определяет конструктор ``_init``, "
"который принимает аргументы (в данном случае ``e``), то наследованный класс  "
"(``Idle.gd``) также должен определить ``_init`` и передать соответствующие "
"параметры в этот ``_init`` из ``State.gd``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1140
#, fuzzy
msgid ""
"``Idle.gd`` can have a different number of arguments than the parent class "
"``State.gd``."
msgstr ""
"Количество аргументов в ``Idle.gd`` может отличаться от количества "
"аргументов в базовом классе ``State.gd``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1141
#, fuzzy
msgid ""
"In the example above, ``e`` passed to the ``State.gd`` constructor is the "
"same ``e`` passed in to ``Idle.gd``."
msgstr ""
"в приведенном выше примере, ``e``, переданный конструктору ``State.gd`` "
"является тем же ``e`` переданным в ``Idle.gd``"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1143
#, fuzzy
msgid ""
"If ``Idle.gd``'s ``_init`` constructor takes 0 arguments, it still needs to "
"pass some value to the ``State.gd`` parent class, even if it does nothing. "
"This brings us to the fact that you can pass literals in the base "
"constructor as well, not just variables. eg.::"
msgstr ""
"если конструктор ``_init`` в ``Idle.gd`` принимает ноль аргументов, то ему "
"все равно нужно передать некоторое значение в базовый класс ``State.gd``, "
"даже если он ничего не делает. Что подводит нас к тому, что литералы можно "
"передавать не только переменным, но и в базовом конструкторе. Например.:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1153
msgid "Inner classes"
msgstr "Внутренние классы"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1155
msgid ""
"A class file can contain inner classes. Inner classes are defined using the "
"``class`` keyword. They are instanced using the ``ClassName.new()`` function."
msgstr ""
"Файл класса может хранить внутренние классы. Внутренние классы определяются "
"с помощью ключевого слова ``class``. Создать экземпляр можно с помощью "
"функции ``ClassName.new()``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1180
#, fuzzy
msgid "Classes as resources"
msgstr "Классы как ресурсы"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1182
msgid ""
"Classes stored as files are treated as :ref:`resources <class_GDScript>`. "
"They must be loaded from disk to access them in other classes. This is done "
"using either the ``load`` or ``preload`` functions (see below). Instancing "
"of a loaded class resource is done by calling the ``new`` function on the "
"class object::"
msgstr ""
"Классы, хранящиеся в файлах, рассматриваются как :ref:`ресурсы "
"<class_GDScript>`. Они должны быть загружены с диска для доступа к ним в "
"других классах. Это делается с помощью функций ``load`` или ``preload``  "
"(см. ниже). Создание экземпляра загруженного ресурса класса осуществляется "
"вызовом функции ``new`` на объекте класса::"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1199
msgid "Exports"
msgstr "Экспорт"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1203
#, fuzzy
msgid ""
"Documentation about exports has been moved to :ref:`doc_gdscript_exports`."
msgstr "Документация об экспорте перемещена в :ref:`doc_gdscript_exports`."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1206
msgid "Setters/getters"
msgstr "Сеттеры/геттеры"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1208
msgid ""
"It is often useful to know when a class' member variable changes for "
"whatever reason. It may also be desired to encapsulate its access in some "
"way."
msgstr ""
"Часто полезно знать, когда переменная, входящая в состав класса, изменяется "
"по какой-то причине. Возможно вы хотите ее инкапсулировать."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1211
msgid ""
"For this, GDScript provides a *setter/getter* syntax using the ``setget`` "
"keyword. It is used directly after a variable definition:"
msgstr ""
"Для этого GDScript предоставляет синтаксис *setter/getter*, используя "
"ключевое слово ``setget``. Использовать непосредственно после определения "
"переменной:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1218
msgid ""
"Whenever the value of ``variable`` is modified by an *external* source (i.e. "
"not from local usage in the class), the *setter* function (``setterfunc`` "
"above) will be called. This happens *before* the value is changed. The "
"*setter* must decide what to do with the new value. Vice versa, when "
"``variable`` is accessed, the *getter* function (``getterfunc`` above) must "
"``return`` the desired value. Below is an example::"
msgstr ""
"Всякий раз, когда значение ``variable`` изменяется *внешним* источником (т."
"е. не от локального использования в классе), вызывается функция *setter* "
"(``setterfunc`` выше). Это происходит *до* того, как значение изменится. "
"*Сеттер* должен решить, что делать с новым значением. И наоборот, когда "
"``variable`` доступна, функция *getter* (``getterfunc`` выше) должна "
"``return(возвращать)`` желаемое значение. Ниже приведен пример:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1234
#, fuzzy
msgid "Either of the *setter* or *getter* functions can be omitted::"
msgstr "Любая из функций *setter* или *getter* может быть пропущена:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1241
msgid ""
"Setters and getters are useful when :ref:`exporting variables "
"<doc_gdscript_exports>` to the editor in tool scripts or plugins, for "
"validating input."
msgstr ""
"Сеттеры и геттеры полезны при :ref:`экспорте переменных "
"<doc_gdscript_exports>` в редактор в инструментах скриптов или плагинов для "
"проверки ввода."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1244
msgid ""
"As said, *local* access will *not* trigger the setter and getter. Here is an "
"illustration of this:"
msgstr ""
"Как уже говорилось, *локальный* доступ *не будет* запускать сеттер и геттер. "
"Вот иллюстрация этого:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1261
msgid "Tool mode"
msgstr "Режим Инструмента"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1263
msgid ""
"By default, scripts don't run inside the editor and only the exported "
"properties can be changed. In some cases, it is desired that they do run "
"inside the editor (as long as they don't execute game code or manually avoid "
"doing so). For this, the ``tool`` keyword exists and must be placed at the "
"top of the file::"
msgstr ""
"Скрипты по умолчанию не запускаются внутри редактора, и только "
"экспортируемые свойства могут быть изменены. В некоторых случаях желательно, "
"чтобы они выполнялись внутри редактора (до тех пор, пока они не выполняют "
"код игры или не избегают этого вручную). Для этого существует ключевое слово "
"``tool``, которое должно размещаться в верхней части файла:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1277
#, fuzzy
msgid "See :ref:`doc_running_code_in_the_editor` for more information."
msgstr ":ref:`doc_running_code_in_the_editor`"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1279
msgid ""
"Be cautious when freeing nodes with ``queue_free()`` or ``free()`` in a tool "
"script (especially the script's owner itself). As tool scripts run their "
"code in the editor, misusing them may lead to crashing the editor."
msgstr ""
"Будьте осторожны при освобождении узлов с помощью ``queue_free()`` или "
"``free()`` в скрипт инструмента (особенно самого владельца скрипта). Так как "
"скрипт инструмента запускает свой код в редакторе, неправильное их "
"использование может привести к крашу редактора."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1285
msgid "Memory management"
msgstr "Управление памятью"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1287
msgid ""
"If a class inherits from :ref:`class_Reference`, then instances will be "
"freed when no longer in use. No garbage collector exists, just reference "
"counting. By default, all classes that don't define inheritance extend "
"**Reference**. If this is not desired, then a class must inherit :ref:"
"`class_Object` manually and must call instance.free(). To avoid reference "
"cycles that can't be freed, a ``weakref`` function is provided for creating "
"weak references."
msgstr ""
"Если класс наследует от :ref:`class_Reference`, то экземпляры будут "
"освобождены, когда они больше не будут использоваться. Вместо сборщика "
"мусора происходит подсчет ссылок. По умолчанию, все классы, которые не "
"определяют наследование, расширяются **Reference**. Если это нежелательно, "
"то класс должен наследовать :ref:`class_Object` вручную и вызывать instance."
"free(). Чтобы избежать циклов ссылок, которые не могут быть освобождены, для "
"создания слабых ссылок предусмотрена функция ``weakref``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1295
msgid ""
"Alternatively, when not using references, the "
"``is_instance_valid(instance)`` can be used to check if an object has been "
"freed."
msgstr ""
"Или же, если ссылки не используются, `is_instance_valid(instance)` может "
"быть использован для проверки того, был ли освобожден объект."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1302
msgid "Signals"
msgstr "Сигналы"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1304
#, fuzzy
msgid ""
"Signals are a tool to emit messages from an object that other objects can "
"react to. To create custom signals for a class, use the ``signal`` keyword."
msgstr ""
"Сигналы это способ отправки уведомлений от объекта, который могут "
"прослушивать другие объекты. Создавайте собственные сигналы для класса "
"используя ключевое слово ``signal``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1317
msgid ""
"Signals are a `Callback <https://en.wikipedia.org/wiki/"
"Callback_(computer_programming)>`_ mechanism. They also fill the role of "
"Observers, a common programming pattern. For more information, read the "
"`Observer tutorial <https://gameprogrammingpatterns.com/observer.html>`_ in "
"the Game Programming Patterns ebook."
msgstr ""
"Сигналы это `Callback <https://en.wikipedia.org/wiki/"
"Callback_(computer_programming)>`_ механизм. Они также выполняют роль "
"наблюдателя, распространенный шаблон программирования. Для лучшего понимания "
"информации, читайте `про шаблон наблюдатель <https://gameprogrammingpatterns."
"com/observer.html>`_ в словаре Шаблонов Игрового Программирования."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1324
msgid ""
"You can connect these signals to methods the same way you connect built-in "
"signals of nodes like :ref:`class_Button` or :ref:`class_RigidBody`."
msgstr ""
"Вы можете подключать эти сигналы к методам точно так же, как вы подключаете "
"встроенные сигналы узлов типа :ref:`class_Button` или :ref:`class_RigidBody`."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1327
#, fuzzy
msgid ""
"In the example below, we connect the ``health_depleted`` signal from a "
"``Character`` node to a ``Game`` node. When the ``Character`` node emits the "
"signal, the game node's ``_on_Character_health_depleted`` is called::"
msgstr ""
"В примере ниже мы соединили сигнал ``health_depleted`` от узла ``Character`` "
"с узлом ``Game``. Когда узел ``Character`` отправляет сигнал, вызывается "
"игровой узел ``_on_Character_health_depleted``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1341
#, fuzzy
msgid "You can emit as many arguments as you want along with a signal."
msgstr ""
"Вы можете отправлять вместе с сигналом столько аргументов, сколько хотите."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1343
msgid ""
"Here is an example where this is useful. Let's say we want a life bar on "
"screen to react to health changes with an animation, but we want to keep the "
"user interface separate from the player in our scene tree."
msgstr ""
"Вот пример, где это может быть полезным. Допустим, мы хотим, чтобы полоса "
"здоровья на экране реагировала на изменения здоровья анимацией, но мы хотим, "
"чтобы пользовательский интерфейс был отделен от игрока в нашем дереве сцен."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1347
#, fuzzy
msgid ""
"In our ``Character.gd`` script, we define a ``health_changed`` signal and "
"emit it with :ref:`Object.emit_signal() <class_Object_method_emit_signal>`, "
"and from a ``Game`` node higher up our scene tree, we connect it to the "
"``Lifebar`` using the :ref:`Object.connect() <class_Object_method_connect>` "
"method::"
msgstr ""
"В нашем скрипте ``Character.gd`` мы определяем сигнал ``health_changed`` и "
"отправляем его вместе с :ref:`Object.emit_signal() "
"<class_Object_method_emit_signal>`, и узел ``Game`` выше по дереву сцен мы "
"соединяем с ``Lifebar`` используя метод :ref:`Object.connect() "
"<class_Object_method_connect>`."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1388
#, fuzzy
msgid ""
"To use signals, your class has to extend the ``Object`` class or any type "
"extending it like ``Node``, ``KinematicBody``, ``Control``..."
msgstr ""
"Чтобы использовать сигналы, ваш класс должен расширить класс ``Object``или "
"любой другой тип, расширяя его в виде ``Node``, ``KinematicBody``, "
"``Control``..."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1391
msgid ""
"In the ``Game`` node, we get both the ``Character`` and ``Lifebar`` nodes, "
"then connect the character, that emits the signal, to the receiver, the "
"``Lifebar`` node in this case."
msgstr ""
"В узле ``Game`` мы берём узлы ``Character`` и ``Lifebar``, затем соединяем "
"символ, отправляющий сигнал, с получателем, в нашем случае с узлом "
"``Lifebar``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1405
msgid ""
"This allows the ``Lifebar`` to react to health changes without coupling it "
"to the ``Character`` node."
msgstr ""
"Это позволяет ``Lifebar`` реагировать на изменения здоровья без соединения с "
"узлом ``Character``."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1408
msgid ""
"You can write optional argument names in parentheses after the signal's "
"definition::"
msgstr ""
"Вы можете написать дополнительные аргументы в скобках после определения "
"сигнала::"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1414
#, fuzzy
msgid ""
"These arguments show up in the editor's node dock, and Godot can use them to "
"generate callback functions for you. However, you can still emit any number "
"of arguments when you emit signals; it's up to you to emit the correct "
"values."
msgstr ""
"Эти аргументы показываются в доке узла редактора и Godot может использовать "
"их, чтобы производить для вас функции обратного вызова. Однако, вы всё ещё "
"можете отправлять любое число аргументов при отправке сигналов; отправка "
"правильных значений зависит от вас."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1420
msgid ""
"GDScript can bind an array of values to connections between a signal and a "
"method. When the signal is emitted, the callback method receives the bound "
"values. These bound arguments are unique to each connection, and the values "
"will stay the same."
msgstr ""
"GDScript может связывать массив значений с соединениями между сигналом и "
"методом. Когда сигнал отправляется, метод обратного вызова получает "
"связанные значения. Эти связанные аргументы уникальны для каждого "
"соединения, и значения останутся прежними."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1425
msgid ""
"You can use this array of values to add extra constant information to the "
"connection if the emitted signal itself doesn't give you access to all the "
"data that you need."
msgstr ""
"Вы можете использовать это множество значений чтобы добавить дополнительную "
"постоянную информацию в соединение, если сам отправляемый сигнал не даёт вам "
"доступ ко всем данным, которые вам нужны."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1429
msgid ""
"Building on the example above, let's say we want to display a log of the "
"damage taken by each character on the screen, like ``Player1 took 22 damage."
"``. The ``health_changed`` signal doesn't give us the name of the character "
"that took damage. So when we connect the signal to the in-game console, we "
"can add the character's name in the binds array argument::"
msgstr ""
"Основываясь на предыдущем примере, представим, что мы хотим показать лог "
"урона, полученного всеми персонажами на экране, вроде ``Игрок1 получил 22 "
"единицы урона``. Сигнал ``health_changed`` не выдаёт имя получившего урон "
"персонажа. Так что, когда мы соединим сигнал с внутриигровой консолью, мы "
"можем добавить имя персонажа в связку аргумента массива::"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1443
msgid ""
"Our ``BattleLog`` node receives each element in the binds array as an extra "
"argument::"
msgstr ""
"Наш узел ``BattleLog`` получает каждый элемент в связке массива как "
"дополнительный аргумент::"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1456
msgid "Coroutines with yield"
msgstr "Сопрограммы с промежуточным возвратом (yield)"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1458
msgid ""
"GDScript offers support for `coroutines <https://en.wikipedia.org/wiki/"
"Coroutine>`_ via the :ref:`yield<class_@GDScript_method_yield>` built-in "
"function. Calling ``yield()`` will immediately return from the current "
"function, with the current frozen state of the same function as the return "
"value. Calling ``resume()`` on this resulting object will continue execution "
"and return whatever the function returns. Once resumed, the state object "
"becomes invalid. Here is an example::"
msgstr ""
"GDScript предлагает поддержку `сопрограмм <https://en.wikipedia.org/wiki/"
"Coroutine>`_ через встроенную функцию :ref:"
"`yield<class_@GDScript_method_yield>`. Вызов ``yield()`` немедленно "
"произведет возврат из текущей функции с текущим замороженным состоянием этой "
"же функции как возвращаемое значение. При вызове ``resume()`` на данном "
"результате объект продолжит выполнение и вернет все, что возвращает функция. "
"После возобновления состояние объекта становится недействительным. Вот "
"пример:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1479
#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1500
msgid "Will print::"
msgstr "Будет выведено:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1485
msgid ""
"It is also possible to pass values between ``yield()`` and ``resume()``, for "
"example::"
msgstr ""
"Также можно передавать значения между функциями ``yield()`` и ``resume()``, "
"например:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1506
msgid ""
"Remember to save the new function state, when using multiple ``yield``\\s::"
msgstr ""
"Не забывайте сохранять новое состояние функции при использовании нескольких "
"``yield``\\-ов::"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1521
msgid "Coroutines & signals"
msgstr "Сопрограммы и сигналы"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1523
#, fuzzy
msgid ""
"The real strength of using ``yield`` is when combined with signals. "
"``yield`` can accept two arguments, an object and a signal. When the signal "
"is received, execution will recommence. Here are some examples::"
msgstr ""
"Реальная сила использования ``yield`` заключается в их сочетании с "
"сигналами. ``yield`` может принимать два аргумента, объект и сигнал. Когда "
"сигнал будет получен, выполнение будет возобновлено. Вот несколько примеров:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1536
msgid ""
"Coroutines themselves use the ``completed`` signal when they transition into "
"an invalid state, for example::"
msgstr ""
"Сами сопрограммы используют сигнал ``completed`` при переходе в "
"недействительное состояние, например:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1548
msgid ""
"``my_func`` will only continue execution once both buttons have been pressed."
msgstr "``my_func`` будет продолжаться только после нажатия обеих кнопок."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1550
msgid "You can also get the signal's argument once it's emitted by an object:"
msgstr ""
"Вы также можете получить аргумент сигнала, когда он передается объектом:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1557
msgid ""
"If you're unsure whether a function may yield or not, or whether it may "
"yield multiple times, you can yield to the ``completed`` signal "
"conditionally:"
msgstr ""
"Если вы не уверены, может ли функция вернуть промежуточный результат или "
"нет, или может ли он вернуться несколько раз, вы можете привести "
"промежуточный результат к сигналу ``completed`` через условие:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1579
#, fuzzy
msgid ""
"This ensures that the function returns whatever it was supposed to return "
"regardless of whether coroutines were used internally. Note that using "
"``while`` would be redundant here as the ``completed`` signal is only "
"emitted when the function didn't yield anymore."
msgstr ""
"Это гарантирует то, что функция возвращает все, что предполагалось вернуть, "
"независимо от того, использовались ли внутри сопрограммы. Обратите внимание, "
"что использование `while`` было бы здесь лишним, поскольку сигнал` "
"`completed`` посылается только тогда, когда у функции больше не остается "
"промежуточных возвратов."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1585
msgid "Onready keyword"
msgstr "Ключевое слово Onready"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1587
#, fuzzy
msgid ""
"When using nodes, it's common to desire to keep references to parts of the "
"scene in a variable. As scenes are only warranted to be configured when "
"entering the active scene tree, the sub-nodes can only be obtained when a "
"call to ``Node._ready()`` is made."
msgstr ""
"При использовании узлов часто возникает желание сохранить ссылки на части "
"сцены в переменной. Поскольку конфигурирование сцен гарантировано только при "
"входе в активное дерево сцен, суб-узлы могут быть получены только при вызове "
"функции Node._ready()."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1600
msgid ""
"This can get a little cumbersome, especially when nodes and external "
"references pile up. For this, GDScript has the ``onready`` keyword, that "
"defers initialization of a member variable until ``_ready()`` is called. It "
"can replace the above code with a single line::"
msgstr ""
"Это может стать немного громоздким, особенно когда узлы и внешние ссылки "
"накапливаются. Для этого в GDScript есть ключевое слово ``onready``, которое "
"откладывает инициализацию входящей переменной до вызова ``_ready()``. Он "
"может заменить приведенный выше код одной строкой:"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1608
msgid "Assert keyword"
msgstr "Ключевое слово Assert"

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1610
msgid ""
"The ``assert`` keyword can be used to check conditions in debug builds. "
"These assertions are ignored in non-debug builds. This means that the "
"expression passed as argument won't be evaluated in a project exported in "
"release mode. Due to this, assertions must **not** contain expressions that "
"have side effects. Otherwise, the behavior of the script would vary "
"depending on whether the project is run in a debug build."
msgstr ""
"Ключевое слово ``assert`` можно использовать для проверки условий в "
"отладочных сборках. В неотладочных сборках такие утверждения игнорируются. "
"Это означает, что передаваемое как аргумент выражение не будет "
"обрабатываться в проекте, экспортированном в режиме релиза. Поэтому "
"утверждения **не должны** содержать выражения, имеющие побочные эффекты. В "
"противном случае поведение скрипта в отладочной и релизной сборке будет "
"различаться."

#: ../../docs/getting_started/scripting/gdscript/gdscript_basics.rst:1622
#, fuzzy
msgid ""
"When running a project from the editor, the project will be paused if an "
"assertion error occurs."
msgstr ""
"Когда запускаешь проект через редактор, первый будет остановлен, если "
"произойдёт ошибка утверждения."
